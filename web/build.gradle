description = 'Intyg Common (Web)'

apply plugin: 'com.moowork.grunt'

def webappOutputDir = 'build/'
def webappTestOutputDir = 'build/karma/'

grunt {
    colors = System.properties['gruntColors'] ? System.properties['gruntColors'].toBoolean() : true
}

node {
    version = '6.6.0'
    download = true
    distBaseUrl = 'https://build-inera.nordicmedtest.se/node/'
    workDir = projectDir
    nodeModulesDir = projectDir
}

sourceSets {
    main {
        resources {
            exclude '**/*.scss'
            exclude '**/*.spec.js'
        }
    }
}

task jsTests(type: NodeTask, dependsOn: [npmInstall]) {
    inputs.dir("$projectDir/src/main/resources")
    inputs.files(fileTree(projectDir).include('*.js'))
    inputs.files(fileTree(projectDir).include('*.json'))
    inputs.files(configurations.compile)
    outputs.dir(webappTestOutputDir)

    script = file('node_modules/grunt-cli/bin/grunt')
    args = [ 'test', "--outputDir=${webappTestOutputDir}", '--run-coverage=' + (project.findProperty('codeCoverage') != null ? 'true' : '') ]
}

test.dependsOn(jsTests)

task jsInclude(type: NodeTask, dependsOn: [npmInstall]) {
    inputs.dir("$projectDir/src/main/resources")
    inputs.files(fileTree(projectDir).include('*.js'))
    inputs.files(fileTree(projectDir).include('*.json'))
    inputs.files(configurations.compile)
    outputs.dir(webappOutputDir)

    script = file('node_modules/grunt-cli/bin/grunt')
    args = ['default', "--outputDir=${webappOutputDir}"]
}

jar.dependsOn(jsInclude)

task jsCodeQuality(type: NodeTask, dependsOn: [npmInstall]) {
    outputs.upToDateWhen { false }

    script = file('node_modules/grunt-cli/bin/grunt')
    args = ['lint']
}

checkstyleMain.dependsOn(jsCodeQuality)
jsCodeQuality.onlyIf { project.hasProperty('codeQuality') }
