plugins {
  id 'org.ajoberstar.grgit' version '1.5.1'
}

ext.nexusUsername = System.properties['nexusUsername']
ext.nexusPassword = System.properties['nexusPassword']

ext {
  cxfVersion = "3.1.3"
  commonsCollectionsVersion = "3.2.1"
  phSchematronVersion = "3.0.1"
  itextVersion = "5.3.2"
  springVersion = "4.2.2.RELEASE"
}

allprojects  {
  apply plugin: 'maven'
  apply plugin: 'org.ajoberstar.grgit'

  def baseVersion = '0.0.'

  group = 'se.inera.intyg.intygstyper'
  version = System.env.BUILD_NUMBER != null ? baseVersion + System.env.BUILD_NUMBER : '0-SNAPSHOT'
  rootProject.ext.commonVersion = (version == '0-SNAPSHOT') ? '0-SNAPSHOT' : baseVersion + '+'
}

subprojects {
  apply plugin: 'java'

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  repositories {
    mavenLocal()
    maven { url "https://build-inera.nordicmedtest.se/nexus/content/repositories/releases/" }
    maven { url "https://build-inera.nordicmedtest.se/nexus/content/repositories/snapshots/" }
    maven { url "https://build-inera.nordicmedtest.se/nexus/content/repositories/thirdparty/" }
    maven { url "http://repo.maven.apache.org/maven2" }
  }

  task createVersionPropertyFile(dependsOn: processResources) << {
    def propertyFile = "${buildDir}/resources/main/version.properties"
    ant.touch(file: propertyFile, mkdirs: "true")
    ant.propertyfile(file: propertyFile) {
      entry(key: 'project.version', default: rootProject.version)
      entry(key: 'buildTime', default: new Date())
      entry(key: 'gitCommit', default: "${grgit.head().id}")
      entry(key: 'gitBranch', default: "${grgit.branch.getCurrent().getName()}")
      entry(key: 'commonVersion', default: "${resolvedCommonVersion}")
    }
  }

  jar.dependsOn(createVersionPropertyFile)

  configurations {
    buildtools
  }

  dependencies {
    buildtools "se.inera.intyg.common:common-build-tools:${commonVersion}"
    testCompile "junit:junit:4.+"
    testCompile 'commons-io:commons-io:2.4'
    testCompile 'org.mockito:mockito-core:1.9.0'
    testCompile 'org.skyscreamer:jsonassert:1.2.0'
    testCompile "org.springframework:spring-test:${springVersion}"
    testCompile 'org.unitils:unitils-core:3.3'
    testCompile 'xmlunit:xmlunit:1.4'
  }

  task unzipBuildTools(type: Copy) {
    description 'Extracts common-build-tools'
    into "$buildDir/build-tools/"
    from {
      configurations.buildtools.collect { zipTree(it) }
    }
  }

  if (project.hasProperty('codeQuality')) {
    apply plugin: 'checkstyle'
    checkstyle {
      config = resources.text.fromFile("${buildDir}/build-tools/checkstyle/checkstyle.xml")
      ignoreFailures = false
      showViolations = true
    }

    checkstyleMain.dependsOn unzipBuildTools
    checkstyleMain.source = "src/main/java"
    checkstyleTest.enabled = false
  }
}

subprojects {
  uploadArchives {
    repositories.mavenDeployer {
      pom.whenConfigured {pom ->
        pom.dependencies.findAll {dep -> dep.groupId == 'se.inera.intyg.common' }.each { it.version = rootProject.resolvedCommonVersion }
      }
      repository(url: "https://build-inera.nordicmedtest.se/nexus/content/repositories/releases") {
        authentication(userName: nexusUsername, password: nexusPassword)
      }
    }
  }

  install {
    repositories.mavenInstaller {
      pom.whenConfigured {pom ->
        pom.dependencies.findAll {dep -> dep.groupId == 'se.inera.intyg.common' }.each { it.version = rootProject.resolvedCommonVersion }
      }
    }
  }
}

project(':fk-parent') {
  afterEvaluate { project ->
    project.configurations.find{ it.name == 'compile' }.resolvedConfiguration.getFirstLevelModuleDependencies().find {
      if (it.moduleGroup == 'se.inera.intyg.common') {
        rootProject.ext.resolvedCommonVersion = it.moduleVersion
        return true
      }
      return false
    }
  }
}

task tagRelease {
  description = 'Tags the current head with the projects version.'
  doLast {
    grgit.tag.add {
      name = version
      message = "Release of ${version}"
    }
    //grgit.push(tags: true)
  }
}
