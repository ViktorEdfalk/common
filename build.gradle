plugins {
  id 'org.ajoberstar.grgit' version '1.5.1'
}

allprojects  {
  apply plugin: 'maven'
  apply plugin: 'org.ajoberstar.grgit'
  def baseVersion = '2.6.'

  group = 'se.inera.intyg.intygstyper'
  version = System.getProperty('BUILD_NUMBER') ? baseVersion + System.getProperty('BUILD_NUMBER') : '0-SNAPSHOT'
  rootProject.ext.commonVersion = (version == '0-SNAPSHOT') ? '0-SNAPSHOT' : baseVersion + '+'
}

subprojects {
  apply plugin: 'java'

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  repositories {
    mavenLocal()
    maven { url "https://build-inera.nordicmedtest.se/nexus/content/repositories/releases/" }
    maven { url "https://build-inera.nordicmedtest.se/nexus/content/repositories/snapshots/" }
    maven { url "https://build-inera.nordicmedtest.se/nexus/content/repositories/thirdparty/" }
    maven { url "http://repo.maven.apache.org/maven2" }
  }

  task createVersionPropertyFile(dependsOn: [processResources, ":fk-parent:printDeps"]) << {
    def propertyFile = "${buildDir}/resources/main/version.properties"
    ant.touch(file: propertyFile, mkdirs: "true")
    ant.propertyfile(file: propertyFile) {
      entry(key: 'project.version', default: rootProject.version)
      entry(key: 'buildTime', default: new Date())
      entry(key: 'gitCommit', default: "${grgit.head().id}")
      entry(key: 'gitBranch', default: "${grgit.branch.getCurrent().getName()}")
      entry(key: 'commonVersion', default: "${resolvedCommonVersion}")
    }
  }

  jar.dependsOn(createVersionPropertyFile)
}

project(':fk-parent') {
  task printDeps {
    doLast {
      project.configurations.find{ it.name == 'compile' }.resolvedConfiguration.getFirstLevelModuleDependencies().find {
        if (it.moduleGroup == 'se.inera.intyg.common') {
          rootProject.ext.resolvedCommonVersion = it.moduleVersion
          return true
        }
        return false
      }
    }
  }
}

task tagRelease {
  description = 'Tags the current head with the projects version.'
  doLast {
    grgit.tag.add {
      name = version
      message = "Release of ${version}"
    }
    grgit.push(tags: true)
  }
}
